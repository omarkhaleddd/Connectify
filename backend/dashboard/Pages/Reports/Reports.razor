@page "/reported-posts"
@inject ReportService ReportService
@using Talabat.Core.Entities.Core

<PageTitle>Reports</PageTitle>

<h1 class="fw-bold text-secondary">Reported Posts</h1>

<div class="text-center w-50 mb-3">
    <SearchBar/>
</div>

<DataTable TItem="ReportedPost" Items="reportedPosts">
    <Header>
        @foreach (var head in headers){
            <th>@head</th>
        }
    </Header>
    <Row>
        <td>
            <p class="text-muted mb-0">@context.PostId</p>
        </td>
        <td>
            <p class="text-muted mb-0">@context.Status</p>
        </td>
        @* <td>
            <span class="@(context.Status == "Active" ? "custom-success-badge badge badge-success" : "custom-danger-badge badge badge-primary") rounded-pill d-inline">
                @context.Status
            </span>
        </td> *@
        <td>
            <button type="button" class='btn btn-link btn-sm btn-rounded bg-primary text-white text-decoration-none' data-bs-toggle="modal" data-bs-target="#reportModal">Review</button>
            <ReportModal idName="reportModal" ModalTitle="Report Title" Report="context" />
            <button class='btn btn-link btn-sm btn-rounded bg-red text-white text-decoration-none' @onclick='() => DeleteReport(context)'>Dismiss</button>
            <button class='btn btn-link btn-sm btn-rounded bg-red text-white text-decoration-none' @onclick='() => ResolveReport(context)'>Resolve</button>
        </td>
    </Row>
    <Footer>
        <div class=""></div>
    </Footer>
</DataTable>

@code {
     private List<ReportedPost> reportedPosts;

    protected override async Task OnInitializedAsync()
    {
        var reportedPostsDtos = await ReportService.GetReportedPostsAsync();
        reportedPosts = reportedPostsDtos.ToList();
    }
    private List<string> headers = new List<string>
    {
        "PostId","Status","Actions"
    };

    @* private List<Report> reports = new List<Report> 
    {
        new Report { PostId = 1 ,ReportedBy = "Alex Ray", Type = "Harassment", Status = "Resolved", Date = "2-2-2003" },
        new Report { PostId = 1 ,ReportedBy = "Kate Hunington", Type = "Offensive Content", Status = "Pending", Date = "2-2-2003" },
        new Report { PostId = 1 ,ReportedBy = "John Doe", Type = "Spam", Status = "Under Review", Date = "2-2-2003" },
    }; *@

    private async void DeleteReport(ReportedPost report)
    {
        await ReportService.DismissReport(report.Id);
        RefreshComponent();
    }
    private async void ResolveReport(ReportedPost report)
    {
        await ReportService.ResolveReport(report.Id);
        RefreshComponent();
    }
    private async Task RefreshComponent()
    {
        var reportedPostsDtos = await ReportService.GetReportedPostsAsync();
        reportedPosts = reportedPostsDtos.ToList();
    }
}    
