
<div class="dropdown">
    <a class="custom-nav-link dropdown-toggle" @onclick="ToggleDropDownMenu" href="@route.Href" role="button" id="@route.Name" data-bs-toggle="dropdown" aria-expanded="false">
        <span class="@route.Icon" aria-hidden="true"></span> 
        <span class="route-name">@route.Name</span>
    </a>
    <ul class="dropdown-menu @(IsDropDownOpen ? "show" : string.Empty)" aria-labelledby="@route.Name">
        @foreach (var child in route.Children)
        {
            <li>
                <NavLink class="dropdown-item" href="@child.Href" Match="NavLinkMatch.All">
                    <span class="@child.Icon" aria-hidden="true"></span>
                    
                </NavLink>
            </li>
        }
    </ul>
</div>

@code {
    [Parameter] public Route route { get; set; }
    [Parameter] public bool IsDropDownOpen { get; set; }
    [Parameter] public EventCallback ToggleDropDownMenuCallback { get; set; }

    private void ToggleDropDownMenu()
    {
        ToggleDropDownMenuCallback.InvokeAsync(null);
    }
}
